name: Release .NET Windows App

on:
  push:
    tags:
      - 'v*'

env:
  DOTNET_VERSION: '6.0.x'
  CONFIGURATION: 'Release'

jobs:
  build-and-publish:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: |
            ~\.nuget\packages
            $(Build.SourcesDirectory)\packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Verify projects
        run: |
          dotnet --info
          dotnet sln list
          dotnet list NTCC.NET.Core/NTCC.NET.Core.csproj package

      - name: Restore dependencies
        run: dotnet restore NTCC.NET.sln

      - name: Build solution
        run: dotnet build NTCC.NET.sln --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Run tests (optional)
        run: dotnet test NTCC.NET.sln --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal

      - name: Create artifacts
        run: |
          mkdir -p ./artifacts
          dotnet pack --configuration ${{ env.CONFIGURATION }} --output ./artifacts --no-build
          if (!(Test-Path -Path "./artifacts/*.nupkg")) {
            Write-Error "No packages were created!"
            exit 1
          }

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: "Automated release for version ${{ github.ref_name }}"
          files: |
            ./artifacts/*.nupkg
            NTCC.NET.UI/bin/${{ env.CONFIGURATION }}/*/*.exe
            NTCC.NET.Core/bin/${{ env.CONFIGURATION }}/*/*.dll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}