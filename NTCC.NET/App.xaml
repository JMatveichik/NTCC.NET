<Application x:Class="NTCC.NET.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:NTCC.NET.UI.Converters;assembly=NTCC.NET.UI"
             xmlns:appconverters="clr-namespace:NTCC.NET.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:NTCC.NET">
  
  <!--StartupUri="MainWindow.xaml"-->

  <Application.Resources>
    <ResourceDictionary>

      <ResourceDictionary.MergedDictionaries>

        <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />


        <!-- Theme setting -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/light.cobalt.xaml" />

        <!-- Common resources-->
        <ResourceDictionary Source="pack://application:,,,/NTCC.NET.UI;component/NTCC.NET.UI.Resources.xaml" />

        <ResourceDictionary Source="pack://application:,,,/ToastNotifications.Messages;component/Themes/Default.xaml" />

        <!-- material design styles -->
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignLightTheme.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignDarkTheme.xaml" />-->

        <!-- primary colors -->
        <ResourceDictionary>
          <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Blue.xaml" />
          </ResourceDictionary.MergedDictionaries>
          <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}" />
          <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}" />
          <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}" />
          <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}" />
          <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary600}" />
          <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary600Foreground}" />
        </ResourceDictionary>

        <!-- accent color -->
        <ResourceDictionary>
          <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Lime.xaml" />
          </ResourceDictionary.MergedDictionaries>
          <SolidColorBrush x:Key="SecondaryHueMidBrush" Color="{StaticResource Accent400}" />
          <SolidColorBrush x:Key="SecondaryHueMidForegroundBrush" Color="{StaticResource Accent400Foreground}" />
        </ResourceDictionary>

        <!--<ResourceDictionary>
                    <SolidColorBrush x:Key="MaterialDesignBackground" Color="{Binding Color, Source={StaticResource MaterialDesignPaper}}" />
                </ResourceDictionary>-->

        <!--
                <ResourceDictionary>
                    <Style TargetType="ScrollViewer" BasedOn="{StaticResource MaterialDesignScrollViewer}">
                        <Setter Property="md:ScrollViewerAssist.IgnorePadding" Value="False" />
                    </Style>
                </ResourceDictionary>
                -->

      </ResourceDictionary.MergedDictionaries>


      <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
        <Setter Property="Background" Value="LightGray"/>
      </Style>

      <converters:BooleanToBrushConverter x:Key="BoolToColor"  
                                                TrueBrush="ForestGreen" 
                                                FalseBrush="OrangeRed"/>

      <converters:BooleanToBrushConverter x:Key="BoolToEnabledDisabled"  
                                                TrueBrush="ForestGreen" 
                                                FalseBrush="LightGray"/>

      <converters:BooleanToBrushConverter x:Key="HeaterPWM"  
                                                TrueBrush="OrangeRed" 
                                                FalseBrush="DarkGray"/>

      <converters:BooleanToBrushConverter x:Key="InvertedBoolToColor"  
                                                TrueBrush="ForestGreen" 
                                                FalseBrush="OrangeRed"/>
      
      <!--TEXT BLOCK STYLES-->
      <Style
            x:Key="ItemTitleDynamic"
            BasedOn="{StaticResource ApplicationTextBlockStyle}"
            TargetType="TextBlock"> 
        <Setter Property="FontFamily" Value="{StaticResource RCRegular}" />
        <Setter Property="FontSize" Value="12" />

        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
            <Setter Property="Foreground" Value="LightGray"/>
          </DataTrigger>
        </Style.Triggers>

      </Style>

      <Style
            x:Key="ItemDescriptionDynamic"
            BasedOn="{StaticResource ApplicationTextBlockStyle}"
            TargetType="TextBlock">
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="FontSize" Value="10" />

        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
            <Setter Property="Foreground" Value="LightGray"/>
          </DataTrigger>
        </Style.Triggers>

      </Style>

      <Style x:Key="AppGroupBoxStyle" 
             TargetType="{x:Type GroupBox}" 
             BasedOn="{StaticResource MaterialDesignGroupBox}">
        
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
      </Style>

      <Style  x:Key="AppToggleButton"
              TargetType="{x:Type ToggleButton}" 
              BasedOn="{StaticResource MaterialDesignActionToggleButton}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>

        <Style.Triggers>
          <Trigger Property="IsChecked" Value="True">
            <Setter Property="Background" Value="Green"/>
          </Trigger>
          <Trigger Property="IsChecked" Value="False">
            <Setter Property="Background" Value="LightGray"/>
          </Trigger>
        </Style.Triggers>
      </Style>


      <SolidColorBrush x:Key="InfoMessageBrush" Color="LightBlue"/>
      <SolidColorBrush x:Key="ErrorMessageBrush" Color="DarkRed"/>
      <SolidColorBrush x:Key="WarningMessageBrush" Color="Orange"/>
      <SolidColorBrush x:Key="SuccessMessageBrush" Color="LightGreen"/>
      <SolidColorBrush x:Key="DebugMessageBrush" Color="Gray"/>
      <SolidColorBrush x:Key="ExceptionMessageBrush" Color="Violet"/>
      <SolidColorBrush x:Key="TraceMessageBrush" Color="LightGray"/>

      <appconverters:MessageTypeToColorConverter x:Key="MessageBackGroundColors"
            InfoMessageBrush="{StaticResource InfoMessageBrush}"
            ErrorMessageBrush="{StaticResource ErrorMessageBrush}"
            WarningMessageBrush="{StaticResource WarningMessageBrush}"
            SuccessMessageBrush="{StaticResource SuccessMessageBrush}"
            DebugMessageBrush="{StaticResource DebugMessageBrush}"
            ExceptionMessageBrush="{StaticResource ExceptionMessageBrush}"
            TraceMessageBrush="{StaticResource TraceMessageBrush}"/>
      
    </ResourceDictionary>
  </Application.Resources>
</Application>
