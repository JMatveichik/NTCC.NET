<UserControl x:Class="NTCC.NET.Controls.HeatingZoneInlineCtrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:NTCC.NET.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:converters="clr-namespace:NTCC.NET.UI.Converters;assembly=NTCC.NET.UI"
             xmlns:cmds="clr-namespace:NTCC.NET.Commands"
             mc:Ignorable="d"
             d:DesignHeight="100"
             d:DesignWidth="300">
  
  <UserControl.Resources>
    <Style x:Key="CardTitle"
           TargetType="TextBlock"
           BasedOn="{StaticResource Header2}">
      <Setter Property="FontSize"
              Value="14"/>
      <Setter Property="Margin"
              Value="0, 0, 0, 0"/>
    </Style>
    <Style x:Key="CardSmallValue"
           TargetType="TextBlock"
           BasedOn="{StaticResource ItemDescription}">
      <Setter Property="FontSize"
              Value="10"/>
      <Setter Property="Margin"
              Value="5, 0, 5, 0"/>
      <Setter Property="HorizontalAlignment"
              Value="Right"/>
    </Style>
    <LinearGradientBrush x:Key="HeaterTemperatureBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
      <GradientStop Color="DarkRed"
                    Offset="0.0"/>
      <GradientStop Color="LightCoral"
                    Offset="0.5"/>
      <GradientStop Color="DarkRed"
                    Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TargetWallTemperatureBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
      <GradientStop Color="LightSlateGray"
                    Offset="0.0"/>
      <GradientStop Color="LightSteelBlue"
                    Offset="0.5"/>
      <GradientStop Color="LightSlateGray"
                    Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeatingOnBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
      <GradientStop Color="DarkOrange"
                    Offset="0.0"/>
      <GradientStop Color="LightGoldenrodYellow"
                    Offset="0.5"/>
      <GradientStop Color="DarkOrange"
                    Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeatingOffBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
      <GradientStop Color="DarkBlue"
                    Offset="0.0"/>
      <GradientStop Color="LightBlue"
                    Offset="0.5"/>
      <GradientStop Color="DarkBlue"
                    Offset="1.0"/>
    </LinearGradientBrush>
    <Style TargetType="{x:Type ProgressBar}">
      <Setter Property="Minimum"
              Value="0"/>
      <Setter Property="Maximum"
              Value="850"/>
      <Setter Property="MinHeight"
              Value="5"/>
      <Setter Property="Margin"
              Value="2"/>
      <Setter Property="VerticalAlignment"
              Value="Center"/>
      <Setter Property="Background"
              Value="Transparent"/>
      <!--
    <Style.Triggers>
        <DataTrigger Binding="{Binding State.State}" Value="True">
            <DataTrigger.EnterActions>
                <BeginStoryboard Name="BlinkAnimation">
                    <Storyboard RepeatBehavior="Forever">
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     From="1.0" To="0.2" Duration="0:0:1.5"
                                     AutoReverse="True"/>
                    </Storyboard>
                </BeginStoryboard>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
                <StopStoryboard BeginStoryboardName="BlinkAnimation"/>
            </DataTrigger.ExitActions>
        </DataTrigger>
    </Style.Triggers>
    -->
    </Style>
    <converters:BooleanToBrushConverter x:Key="ZoneHeatingToColor"
                                        TrueBrush="{StaticResource HeatingOnBrush}"
                                        FalseBrush="{StaticResource HeatingOffBrush}"/>
  </UserControl.Resources>
  <materialDesign:Card Margin="2"
                       Padding="5"
                       Width="250"
                       Height="80"
                       MouseEnter="OnCardMouseEnter"
                       MouseLeave="OnCardMouseLeave">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <!--Heating Zone Card Header -->
      <Border Grid.Row="0"
              Style="{StaticResource BorderUnderline}">
        <Grid>
          <Grid.Resources>
            <Style TargetType="{x:Type iconPacks:PackIconVaadinIcons}">
              <Setter Property="RenderTransformOrigin"
                      Value="0.5,0.5"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsControlStarted}"
                             Value="True">
                  <DataTrigger.EnterActions>
                    <BeginStoryboard Name="RotateAnimation">
                      <Storyboard RepeatBehavior="Forever">
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                         To="360"
                                         Duration="0:0:2"
                                         RepeatBehavior="Forever"
                                         AutoReverse="False"/>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="1.0"
                                         To="0.2"
                                         Duration="0:0:2"
                                         AutoReverse="True"/>
                      </Storyboard>
                    </BeginStoryboard>
                  </DataTrigger.EnterActions>
                  <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="RotateAnimation"/>
                  </DataTrigger.ExitActions>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Grid.Resources>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="60"/>
          </Grid.ColumnDefinitions>
          <TextBlock Grid.Column="0"
                     Style="{StaticResource CardTitle}"
                     Text="{Binding Path=Description}"/>
          <StackPanel Grid.Column="1"
                      Orientation="Horizontal"
                      HorizontalAlignment="Right">
            <iconPacks:PackIconIonicons Kind="PoweriOS"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource MetroToolBoxIconStyle16}"
                                        Margin="5"
                                        Foreground="{Binding PowerState, Converter={StaticResource BoolToEnabledDisabled}}">
            </iconPacks:PackIconIonicons>
            <iconPacks:PackIconVaadinIcons Kind="Controller"
                                           Margin="5"
                                           VerticalAlignment="Center"
                                           Style="{StaticResource MetroToolBoxIconStyle16}"
                                           Foreground="{Binding IsControlStarted, Converter={StaticResource BoolToEnabledDisabled}}">
            </iconPacks:PackIconVaadinIcons>
          </StackPanel>
        </Grid>
      </Border>
      <Grid Grid.Row="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="3*"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <!--Temperatures progress bar-->
        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    Orientation="Vertical"
                    VerticalAlignment="Center">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ProgressBar Height="3"
                         Grid.Column="0"
                         Tag="{Binding PowerState.State}"
                         Value="{Binding MaxHeatingElementTemperature, Mode=OneWay}"
                         Foreground="{StaticResource HeaterTemperatureBrush}"/>
            <TextBlock Text="{Binding MaxHeatingElementTemperature, StringFormat={}{0:F0} °C}"
                       Grid.Column="1"
                       Width="40"
                       Style="{StaticResource CardSmallValue}"/>
          </Grid>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ProgressBar Height="3"
                         Grid.Column="0"
                         Tag="{Binding PowerState.State}"
                         Value="{Binding MaxTargetWallTemperature}"
                         Foreground="{StaticResource TargetWallTemperatureBrush}"/>
            <TextBlock Text="{Binding MaxTargetWallTemperature, StringFormat={}{0:F0} °C}"
                       Grid.Column="1"
                       Width="40"
                       Style="{StaticResource CardSmallValue}"/>
          </Grid>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ProgressBar Height="3"
                         Grid.Column="0"
                         Tag="{Binding PWM.State}"
                         Value="{Binding WallTemperature.Value, Mode=OneWay}"
                         Foreground="{Binding PWM.State, Converter={StaticResource ZoneHeatingToColor}}"/>
            <TextBlock Text="{Binding WallTemperature.Value, StringFormat={}{0:F0} °C}"
                       Grid.Column="1"
                       Width="40"
                       Style="{StaticResource CardSmallValue}"/>
          </Grid>
        </StackPanel>
        <TextBlock Grid.Row="0"
                   Grid.Column="1"
                   Text="{Binding Duty.Value, StringFormat={}{0:F0} %}"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Margin="0"
                   Style="{StaticResource Value}"/>
        <StackPanel x:Name="HeatinigZoneQuickControl"
                    Visibility="Collapsed"
                    Grid.Row="0"
                    Grid.Column="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
          
          <Button Width="30"
                  Height="30"
                  Margin="5"
                  ToolTip="Выключить питание нагревателя"
                  Style="{StaticResource MaterialDesignFloatingActionButton}"
                  Command="{x:Static cmds:FacilityCommands.SwitchHeatingZonePower}"
                  CommandParameter="{Binding}">
            
            <iconPacks:PackIconIonicons Kind="PoweriOS"
                                        Style="{StaticResource MetroToolBoxIconStyle16}"
                                        Foreground="White">
            </iconPacks:PackIconIonicons>
          </Button>
          <Button Width="30"
                  Height="30"
                  Margin="5"
                  ToolTip="Изменить параметры нагревателя"
                  Style="{StaticResource MaterialDesignFloatingActionButton}"
                  Command="{x:Static cmds:FacilityCommands.HeatingZoneParameters}"
                  CommandParameter="{Binding}">
            <iconPacks:PackIconMaterialDesign Kind="Settings"
                                              Style="{StaticResource MetroToolBoxIconStyle16}"
                                              Foreground="White">
            </iconPacks:PackIconMaterialDesign>
          </Button>
        </StackPanel>
      </Grid>
    </Grid>
  </materialDesign:Card>
</UserControl>
